{"version":3,"sources":["components/Search.js","components/TablePagination.js","components/Table.js","components/TablePage.js","api/getUsers.js","App.js","index.js"],"names":["withStyles","main","width","background","border","padding","searchIcon","height","cursor","setValue","placeholder","classes","useState","query","setQuery","buttonClass","classNames","value","onChange","e","target","className","type","onClick","class","textAlign","paddingLeft","page","currentPage","pages","setPage","pageLimit","numPages","Math","ceil","goToPrevPage","goToNextPage","blocks","i","push","getPaginationNumbers","map","pageNum","style","backgroundColor","table","fontFamily","borderCollapse","renderRow","entries","header","textfilterOptions","filter","setFilter","getFilteredEntries","entry","length","option","toLowerCase","includes","doesIncludeEntry","offset","slice","getPaginatedEntries","contentSection","headerSection","users","setUsers","getFilterUsers","setFilterUsers","emailFilter","setEmailFilter","useEffect","Promise","resolve","fetch","then","res","json","data","sortData","sort","a","b","name","console","log","filteredRestaurants","filterDataByemail","row","email","headerOptions","id","filterOptions","renderDropdown","renderOptions","reduce","acc","val","emails","split","Array","from","Set","currentVal","changeFunc","options","field","generateRow","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b42f1ac0.chunk.js","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  main: {\n    width:\"30%\", \n    background:\"#F2F1F9\", \n    border:\"none\", \n    padding:\"0.5rem\"\n  },\n  searchIcon: {\n    height: 30,\n    border: \"none\",\n    cursor: \"pointer\"\n  }\n};\n\nconst Search = ({ setValue, placeholder, classes }) => {\n  const [query, setQuery] = useState('');\n  const buttonClass = classNames({\n    \"btn btn-secondary\": true,\n    [classes.searchIcon]: true\n  })\n  return (\n    <>\n      <input \n        value={query}\n        placeholder={placeholder}\n        onChange={(e) => setQuery(e.target.value)}\n        className={classes.main}\n      />\n      <button className={buttonClass} type=\"button\" onClick={() => setValue(query)}>\n      <i class=\"fa fa-search\"></i>\n      </button>\n    </>\n  );\n}\n\nexport default withStyles(styles)(Search);\n","import React, { Fragment } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  main: {\n    border: '1px solid #dddddd',\n    textAlign: 'center',\n    padding: 8,\n    paddingLeft: 0\n  },\n  page: {\n    border: '1px solid #dddddd',\n    padding: 8,\n    cursor: 'pointer'\n  }\n};\n\nconst TablePagination = ({ currentPage, pages, setPage, pageLimit, classes }) => {\n  const numPages = Math.ceil(pages / pageLimit);\n\n  const getPaginationNumbers = () => {\n    const blocks = [];\n    for (let i = 0; i < numPages; i++) {\n      blocks.push(i);\n    }\n    return blocks;\n  };\n  \n  const renderPageBlocks = () => {\n    const getPageNumbers = getPaginationNumbers();\n    return getPageNumbers.map(pageNum =>\n      <a \n        key={pageNum} \n        className={classes.page} \n        onClick={() => setPage(pageNum)}\n        style={pageNum === currentPage ? { backgroundColor: 'green' } : null}\n      >\n        {pageNum}\n      </a>\n    );\n  };\n\n  const goToPrevPage = () => {\n    if (currentPage > 0) {\n      setPage(currentPage - 1);\n    }\n  };\n\n  const goToNextPage = () => {\n    if (currentPage < numPages - 1) {\n      setPage(currentPage + 1);\n    }\n  };\n\n  const renderPrevPageBlocks = () => {\n    return (\n      <>\n        <a key=\"first-page\" className={classes.page} onClick={() => setPage(0)}>&#171;</a>\n        <a key=\"prev-page\" className={classes.page} onClick={goToPrevPage}>&#8592;</a>\n      </>\n    )\n  };\n\n  const renderNextPageBlocks = () => {\n    return (\n      <>\n        <a key=\"next-page\" className={classes.page} onClick={goToNextPage}>&rarr;</a>\n        <a key=\"last-page\" className={classes.page} onClick={() => setPage(numPages - 1)}>&raquo;</a>\n      </>\n    )\n  };\n\n  return (\n    <div className={classes.main}>\n      {renderPrevPageBlocks()}\n      {renderPageBlocks()}\n      {renderNextPageBlocks()}\n    </div>\n  );\n}\n\nexport default withStyles(styles)(TablePagination);","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Search from './Search';\nimport TablePagination from './TablePagination';\n\nconst styles = {\n  table: {\n    fontFamily: 'arial, sans-serif',\n    borderCollapse: 'collapse',\n    width: '100%'\n  }\n};\n\nconst Table = ({ renderRow, entries, header, classes, placeholder = '', textfilterOptions = [], pageLimit = 10 }) => {\n  const [filter, setFilter] = useState('');\n  const [page, setPage] = useState(0);\n\n  const doesIncludeEntry = entry => {\n    return filter.length > 0 ? textfilterOptions.filter(option => entry[option].toLowerCase().includes(filter.toLowerCase())).length > 0 : true;\n  };\n\n  const getPaginatedEntries = entries => {\n    const offset = page * pageLimit;\n    return entries.slice(offset, offset + pageLimit);\n  }\n\n  const getFilteredEntries = () => {\n    return entries.filter(entry => doesIncludeEntry(entry));\n  }\n\n  const renderEntries = () => {\n    return getPaginatedEntries(getFilteredEntries());\n  }\n\n  return (\n    <div>\n      <Search \n        setValue={setFilter}\n        placeholder={placeholder}\n      />\n      <table className={classes.table}>\n        {header}\n        {renderEntries().map(entry => renderRow(entry))}\n      </table>\n      <TablePagination \n        pageLimit={pageLimit}\n        pages={getFilteredEntries().length}\n        currentPage={page}\n        setPage={setPage}\n      />\n    </div>\n  )\n}\n\nexport default withStyles(styles)(Table);","import React, { useEffect, useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { getUsers } from '../api/getUsers';\nimport Table from './Table';\n\nconst styles = {\n  contentSection: {\n    border: '1px solid #dddddd',\n    textAlign: 'left',\n    padding: 8\n  },\n  headerSection: {\n    border: '1px solid #dddddd',\n    textAlign: 'left',\n    padding: 8\n  }\n}\n\nconst TablePage = ({ classes }) => {\n \n  const [users, setUsers] = useState([]);\n  const [getFilterUsers, setFilterUsers] = useState([]);\n  const [emailFilter, setEmailFilter] = useState('all');\n\n  useEffect(() => {\n    getUsers().then(data => {\n      const sortData = data.sort((a, b) => (a.name > b.name) ? 1 : -1)\n      console.log(sortData)\n      setUsers(sortData);\n      setFilterUsers(sortData);      \n    });\n  }, []);\n\n  useEffect(() => {\n    let filteredRestaurants = filterDataByemail(users);\n    setFilterUsers(filteredRestaurants);\n  }, [emailFilter]);\n\n  const filterDataByemail = data => {\n    if (emailFilter !== 'all') {\n      return data.filter(row => row.email.includes(emailFilter));\n    }\n    return data;\n  }\n\n  const headerOptions = [\n    {\n      id: \"id\"      \n    },\n    {\n      id: \"firstName\"\n    },\n    {\n      id: \"lastName\"\n    },\n    {\n      id: \"phone\"\n    },\n    {\n      id: \"email\",\n      filterOptions: () => renderDropdown(emailFilter, e => setEmailFilter(e.target.value), renderOptions())      \n    }];\n\n\n  const renderOptions = () => {\n    return users.reduce((acc, val) => {\n      const emails = val.email.split(',');\n      return Array.from(new Set([...acc, ...emails]));\n    }, ['all'])\n  };\n\n  const renderDropdown = (currentVal, changeFunc, options) => {\n    return (\n      <select value={currentVal} onChange={changeFunc}>\n        {options.map(option => <option value={option}>{option}</option>)}\n      </select>\n    )\n  };\n\n  const generateRow = row => {\n    return (\n      <tr key={row.id}>\n        {headerOptions.map(field => (\n          <td className={classes.contentSection}>\n            {row[field.id]}\n          </td>\n        ))}\n      </tr>\n    )\n  };\n\n  const header = (\n    <tr>\n      {headerOptions.map(header => (\n        <th className={classes.headerSection}>\n          {header.id}\n          {header.filterOptions && (\n            <div>\n              {header.filterOptions()}\n            </div>\n          )}\n        </th>\n      ))}\n    </tr>\n  );\n\n  return (\n    <div>\n      <Table\n        renderRow={row => generateRow(row)}\n        entries={getFilterUsers}\n        header={header}\n        placeholder=\"Search...\"\n        textfilterOptions={['firstName', 'lastName', 'email']}\n        pageLimit={10}\n      />\n    </div>\n  )\n}\n\nexport default withStyles(styles)(TablePage);","export const getUsers = () => {\n  return new Promise(resolve => {\n    fetch('https://www.filltext.com/?rows=100&id={number|100}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}', {\n       }).then(res => res.json())\n      .then(data => resolve(data));\n  });\n}","import TablePage from './components/TablePage';\n\nfunction App() {\n  return (\n    <div>\n      <TablePage />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}